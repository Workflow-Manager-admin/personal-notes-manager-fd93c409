{"is_source_file": true, "format": "Python", "description": "This file sets up database connectivity and ORM base for the notes backend, including engine creation and session configuration.", "external_files": ["sqlalchemy", "os"], "external_methods": ["create_engine", "sessionmaker", "declarative_base"], "published": [], "classes": [], "methods": [], "calls": ["create_engine", "sessionmaker", "declarative_base"], "search-terms": ["database setup", "SQLAlchemy", "engine", "session", "Base", "orm"], "state": 2, "file_id": 5, "knowledge_revision": 14, "git_revision": "", "ctags": [{"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-fd93c409/notes_backend/src/api/database.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DB_URL", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-fd93c409/notes_backend/src/api/database.py", "pattern": "/^DB_URL = os.getenv(\"NOTES_DB_URL\", \"sqlite:\\/\\/\\/.\\/notes.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-fd93c409/notes_backend/src/api/database.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-fd93c409/notes_backend/src/api/database.py", "pattern": "/^engine = create_engine($/", "language": "Python", "kind": "variable"}], "hash": "c8472e5022eae658681d90bb3fd33e27", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/database.py", "fields": [{"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DB_URL = os.getenv(\"NOTES_DB_URL\", \"sqlite:\\/\\/\\/.\\/notes.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "engine = create_engine(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14": ""}]}